tmp <- relevant_data %>% filter(age >= 1) %>% group_by(age) %>% tally() %>% mutate(rate = round((n*100 /sum(n)),digits = 2))
age_cut <- cut(tmp$age, c(seq(0, 80, by = 10), Inf), include.lowest = TRUE)
tmp <- aggregate(rate ~ age_cut, tmp, sum)
ggplot(relevant_data, aes(age, fill = factor(survived))) +
geom_histogram(bins=30) +
theme_few() +
xlab("Age") +
scale_fill_discrete(name = "survived") +
ggtitle("Age vs Survived")
relevant_data$gender[relevant_data$sex==1] <- 'Female'
relevant_data$gender[relevant_data$sex==2] <- 'Male'
agevsSur <- ggplot(relevant_data, aes(x = age, y = gender)) +
geom_jitter(aes(colour = factor(survived))) +
theme_pander() +
scale_colour_solarized()+
scale_fill_discrete(name = "survived") +
scale_x_continuous(name="age",limits=c(1, 80)) +
theme(legend.title = element_blank())+
facet_wrap(~pclass) +
labs(x = "Age", y = "Gender", title = "Passenger cabin class vs Gender vs Age vs Survived")
#ggplotly(agevsSur)
relevant_data$sex <- as.numeric(relevant_data$sex)
relevant_data$survived <- as.numeric(relevant_data$survived)
relevant_data$fare <- as.numeric(relevant_data$fare)
relevant_data$pclass <- as.numeric(relevant_data$pclass)
relevant_data$age <- as.numeric(relevant_data$age)
corr_data<-cor(relevant_data[c('survived', 'fare', 'sex', 'pclass', 'age')], use = 'complete.obs')
corrplot(corr_data,method="circle")
corrplot.mixed(corr = , tl.col = "black", upper = "ellipse")
View(relevant_data)
View(relevant_data)
library(reshape2)
library(ggthemes)
library(data.table)
library(flexdashboard)
library(ggplot2)
library(tidyverse) #data Manipulation
library(highcharter)
#library(VIM)#for checking missing values
library(dplyr)
library(shiny)
library(datasets)
library(plotly)
library(corrplot)
#read data into R
titanic <- read.csv("C:/Users/53050/Desktop/Archive/titanic.csv")
lifeboats <- read.csv("C:/Users/53050/Desktop/Archive/Lifeboats.csv")
ttable <- data.table(titanic)
ltable <- data.table(lifeboats[c(2:4)])
View(ltable)
View(ltable)
View(ttable)
View(ttable)
#set join key for both tables
setkey(ttable,boat)
setkey(ltable,boat)
#titanic left outer join lifeboat table
Result <- merge(ttable,ltable,all.x = TRUE)
relevant_data <- subset(Result, select = c(survived, pclass, sex, age, fare, boat, launch, side))
View(relevant_data)
View(relevant_data)
#table for passenger class
pclass_temp <- relevant_data %>% filter(!(pclass=="")) %>%  group_by(pclass) %>% summarize(survived = mean(survived))
gender <- relevant_data %>%  group_by(sex) %>% summarize(survived = mean(survived))
age <- relevant_data %>% filter(age >= 1) %>% group_by(age) %>% summarize(survived = round(mean(survived)*100,digits = 2))
Age <- cut(age$age, c(seq(0, 80, by = 10), Inf), include.lowest = TRUE)
age <- aggregate(survived ~ Age, age, mean)
tmp <- relevant_data %>% filter(age >= 1) %>% group_by(age) %>% tally() %>% mutate(rate = round((n*100 /sum(n)),digits = 2))
age_cut <- cut(tmp$age, c(seq(0, 80, by = 10), Inf), include.lowest = TRUE)
tmp <- aggregate(rate ~ age_cut, tmp, sum)
ggplot(relevant_data, aes(age, fill = factor(survived))) +
geom_histogram(bins=30) +
theme_few() +
xlab("Age") +
scale_fill_discrete(name = "survived") +
ggtitle("Age vs Survived")
relevant_data$gender[relevant_data$sex==1] <- 'Female'
relevant_data$gender[relevant_data$sex==2] <- 'Male'
agevsSur <- ggplot(relevant_data, aes(x = age, y = gender)) +
geom_jitter(aes(colour = factor(survived))) +
theme_pander() +
scale_colour_solarized()+
scale_fill_discrete(name = "survived") +
scale_x_continuous(name="age",limits=c(1, 80)) +
theme(legend.title = element_blank())+
facet_wrap(~pclass) +
labs(x = "Age", y = "Gender", title = "Passenger cabin class vs Gender vs Age vs Survived")
relevant_data$sex <- as.numeric(relevant_data$sex)
relevant_data$survived <- as.numeric(relevant_data$survived)
relevant_data$fare <- as.numeric(relevant_data$fare)
relevant_data$pclass <- as.numeric(relevant_data$pclass)
relevant_data$age <- as.numeric(relevant_data$age)
corr_data<-cor(relevant_data[c('survived', 'fare', 'sex', 'pclass', 'age')], use = 'complete.obs')
corrplot(corr_data,method="circle")
ggplotly(agevsSur)
agevsSur <- ggplot(relevant_data, aes(x = age, y = gender)) +
geom_jitter(aes(colour = factor(survived))) +
theme_few() +
scale_colour_solarized()+
scale_fill_discrete(name = "survived") +
scale_x_continuous(name="age",limits=c(1, 80)) +
theme(legend.title = element_blank())+
facet_wrap(~pclass) +
labs(x = "Age", y = "Gender", title = "Passenger cabin class vs Gender vs Age vs Survived")
ggplotly(agevsSur)
agevsSur <- ggplot(relevant_data, aes(x = age, y = sex)) +
geom_jitter(aes(colour = factor(survived))) +
theme_few() +
scale_colour_solarized()+
scale_fill_discrete(name = "survived") +
scale_x_continuous(name="age",limits=c(1, 80)) +
theme(legend.title = element_blank())+
facet_wrap(~pclass) +
labs(x = "Age", y = "Gender", title = "Passenger cabin class vs Gender vs Age vs Survived")
ggplotly(agevsSur)
library(reshape2)
library(ggthemes)
library(data.table)
library(flexdashboard)
library(ggplot2)
library(tidyverse) #data Manipulation
library(highcharter)
#library(VIM)#for checking missing values
library(dplyr)
library(shiny)
library(datasets)
library(plotly)
library(corrplot)
#read data into R
titanic <- read.csv("C:/Users/53050/Desktop/Archive/titanic.csv")
lifeboats <- read.csv("C:/Users/53050/Desktop/Archive/Lifeboats.csv")
ttable <- data.table(titanic)
ltable <- data.table(lifeboats[c(2:4)])
#set join key for both tables
setkey(ttable,boat)
setkey(ltable,boat)
#titanic left outer join lifeboat table
Result <- merge(ttable,ltable,all.x = TRUE)
relevant_data <- subset(Result, select = c(survived, pclass, sex, age, fare, boat, launch, side))
#table for passenger class
pclass_temp <- relevant_data %>% filter(!(pclass=="")) %>%  group_by(pclass) %>% summarize(survived = mean(survived))
gender <- relevant_data %>%  group_by(sex) %>% summarize(survived = mean(survived))
age <- relevant_data %>% filter(age >= 1) %>% group_by(age) %>% summarize(survived = round(mean(survived)*100,digits = 2))
Age <- cut(age$age, c(seq(0, 80, by = 10), Inf), include.lowest = TRUE)
age <- aggregate(survived ~ Age, age, mean)
tmp <- relevant_data %>% filter(age >= 1) %>% group_by(age) %>% tally() %>% mutate(rate = round((n*100 /sum(n)),digits = 2))
age_cut <- cut(tmp$age, c(seq(0, 80, by = 10), Inf), include.lowest = TRUE)
tmp <- aggregate(rate ~ age_cut, tmp, sum)
ggplot(relevant_data, aes(age, fill = factor(survived))) +
geom_histogram(bins=30) +
theme_few() +
xlab("Age") +
scale_fill_discrete(name = "survived") +
ggtitle("Age vs Survived")
relevant_data$gender[relevant_data$sex==1] <- 'Female'
relevant_data$gender[relevant_data$sex==2] <- 'Male'
agevsSur <- ggplot(relevant_data, aes(x = age, y = sex)) +
geom_jitter(aes(colour = factor(survived))) +
theme_few() +
scale_colour_solarized()+
scale_fill_discrete(name = "survived") +
scale_x_continuous(name="age",limits=c(1, 80)) +
theme(legend.title = element_blank())+
facet_wrap(~pclass) +
labs(x = "Age", y = "Gender", title = "Passenger cabin class vs Gender vs Age vs Survived")
ggplotly(agevsSur)
corr_data<-cor(relevant_data[c('survived', 'fare', 'sex', 'pclass', 'age')], use = 'complete.obs')
r_data <- relevant_data[c('survived', 'fare', 'sex', 'pclass', 'age')]
View(r_data)
View(r_data)
r_data <- relevant_data[c('survived', 'fare', 'sex', 'pclass', 'age')]
View(r_data)
View(r_data)
View(relevant_data)
View(relevant_data)
relevant_data$sex <- as.numeric(relevant_data$sex)
r_data <- relevant_data[c('survived', 'fare', 'sex', 'pclass', 'age')]
View(r_data)
View(r_data)
r_data <- relevant_data[c(,1:5)]
r_data <- relevant_data[,1:5]
View(r_data)
View(r_data)
corr_data<-cor(r_data, use = 'complete.obs')
corrplot(corr_data,method="circle")
corrplot.mixed(corr = corr_data, tl.col = "black", upper = "ellipse")
corrplot(corr_data,method="pearson")
corrplot(corr_data,method="ellipse")
corrplot.mixed(corr = corr_data, tl.col = "black", upper = "ellipse")
ggplotly(cor_p)
cor_p<-corrplot.mixed(corr = corr_data, tl.col = "black", upper = "ellipse")
ggplotly(cor_p)
corr_data<-cor(r_data, use = 'complete.obs')
corrplot(corr_data, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
corrplot(corr_data, type = "upper",
tl.col = "black", tl.srt = 45)
highchart() %>%
hc_chart(type = "heatmap") %>%
hc_xAxis(categories = y, title = NULL) %>%
hc_yAxis(categories = y, title = NULL) %>%
hc_add_series(data = corr_data) %>%
hc_plotOptions(
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
hc_tooltip(formatter = fntltp) %>%
hc_legend(align = "right", layout = "vertical",
margin = 0, verticalAlign = "top",
y = 25, symbolHeight = 280) %>%
hc_colorAxis(  stops= cor_colr,min=-1,max=1)
highchart() %>%
hc_chart(type = "heatmap") %>%
hc_xAxis(title = NULL) %>%
hc_yAxis(title = NULL) %>%
hc_add_series(data = corr_data) %>%
hc_plotOptions(
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
hc_tooltip(formatter = fntltp) %>%
hc_legend(align = "right", layout = "vertical",
margin = 0, verticalAlign = "top",
y = 25, symbolHeight = 280) %>%
hc_colorAxis(  stops= cor_colr,min=-1,max=1)
highchart() %>%
hc_chart(type = "heatmap") %>%
hc_xAxis(title = NULL) %>%
hc_yAxis(title = NULL) %>%
hc_add_series(data = corr_data) %>%
hc_plotOptions(
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
hc_legend(align = "right", layout = "vertical",
margin = 0, verticalAlign = "top",
y = 25, symbolHeight = 280) %>%
hc_colorAxis(  stops= cor_colr,min=-1,max=1)
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
hc_legend(align = "right", layout = "vertical",
margin = 0, verticalAlign = "top",
y = 25, symbolHeight = 280)
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
hc_legend(align = "right", layout = "vertical",
margin = 0, verticalAlign = "top",
y = 25, symbolHeight = 280)
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
highchart() %>%
hc_chart(type = "heatmap") %>%
hc_xAxis(title = NULL) %>%
hc_yAxis(title = NULL) %>%
hc_add_series(data = corr_data) %>%
hc_plotOptions(
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>%
highchart() %>%
hc_chart(type = "heatmap") %>%
hc_xAxis(title = NULL) %>%
hc_yAxis(title = NULL) %>%
hc_add_series(data = corr_data) %>%
hc_plotOptions(
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
))
series = list(
boderWidth = 0,
dataLabels = list(enabled = TRUE)
)) %>% hc_legend(align = "right", layout = "vertical",
margin = 0, verticalAlign = "top",
y = 25, symbolHeight = 280)
trace1 <- list(
x = c("Fantasy", "Drama", "Children", "Action", "Thriller", "Romance", "War", "Musical", "Sci-Fi", "Horror", "Crime", "Comedy", "Mystery", "Adventure", "Documentary", "Animation"),
y = c("Fantasy", "Drama", "Children", "Action", "Thriller", "Romance", "War", "Musical", "Sci-Fi", "Horror", "Crime", "Comedy", "Mystery", "Adventure", "Documentary", "Animation"),
z = matrix(c(1.0, 0.2790368271954674, 0.22025495750708216, 0.2301699716713881, 0.09135977337110482, 0.17492917847025496, 0.014872521246458924, 0.07507082152974505, 0.13385269121813032, 0.13314447592067988, 0.023371104815864022, 0.3371104815864023, 0.08356940509915015, 0.3618980169971671, 0.00424929178470255, 0.18696883852691218, 0.029526378896882494, 1.0, 0.016486810551558755, 0.09015287769784172, 0.13998800959232613, 0.19282074340527577, 0.06699640287769784, 0.025254796163069543, 0.026378896882494004, 0.03372302158273381, 0.12829736211031176, 0.19079736211031176, 0.05403177458033573, 0.05170863309352518, 0.009067745803357313, 0.009967026378896883, 0.2730465320456541, 0.19315188762071994, 1.0, 0.08955223880597014, 0.0052677787532923615, 0.06409130816505706, 0.003511852502194908, 0.12115891132572432, 0.06760316066725197, 0.007901668129938543, 0.015803336259877086, 0.4618086040386304, 0.024582967515364356, 0.39508340649692714, 0.0052677787532923615, 0.41264266900790164, 0.09232954545454546, 0.3417613636363636, 0.028977272727272727, 1.0, 0.3150568181818182, 0.07613636363636364, 0.08494318181818182, 0.008238636363636363, 0.18210227272727272, 0.07670454545454546, 0.21789772727272727, 0.20426136363636363, 0.03977272727272727, 0.2761363636363636, 0.003125, 0.05625, 0.0308760172331259, 0.44710387745332697, 0.0014360938247965534, 0.26543800861656297, 1.0, 0.0627094303494495, 0.023934897079942556, 0.0031115366203925323, 0.10986117759693634, 0.25682144566778364, 0.2948779320248923, 0.09334609861177597, 0.19028243178554333, 0.07276208712302537, 0.0028721876495931067, 0.005983724269985639, 0.05984976980857766, 0.6234552944027139, 0.01768839350617882, 0.06493821177610855, 0.06348437121395686, 1.0, 0.04603828446813666, 0.07850739035619093, 0.023988369275502786, 0.017446086745820207, 0.05863823600678459, 0.4591713108795735, 0.037315241095226555, 0.07123818754543251, 0.003149987884661982, 0.01696147322510298, 0.017587939698492462, 0.7487437185929648, 0.0033500837520938024, 0.25041876046901174, 0.08375209380234507, 0.15912897822445563, 1.0, 0.011725293132328308, 0.02680067001675042, 0.01675041876046901, 0.023450586264656615, 0.09966499162479062, 0.01507537688442211, 0.1407035175879397, 0.06867671691792294, 0.020938023450586266, 0.10231660231660232, 0.3252895752895753, 0.13320463320463322, 0.027992277992277992, 0.012548262548262547, 0.3127413127413127, 0.013513513513513514, 1.0, 0.02413127413127413, 0.0222007722007722, 0.02413127413127413, 0.47586872586872586, 0.011583011583011582, 0.07625482625482626, 0.09555984555984556, 0.10907335907335908, 0.10843373493975904, 0.2019506597819851, 0.04417670682730924, 0.36775674125071717, 0.2633390705679862, 0.05679862306368331, 0.01835915088927137, 0.01434308663224326, 1.0, 0.2587492828456684, 0.029259896729776247, 0.18129661503155478, 0.0774526678141136, 0.22030981067125646, 0.006310958118187034, 0.08950086058519793, 0.07200306396016852, 0.17234775947912678, 0.0034469551895825352, 0.10340865568747606, 0.4109536576024512, 0.027575641516660282, 0.0076599004212945234, 0.008808885484488702, 0.17273075450019149, 1.0, 0.06166219839142091, 0.15128303332056683, 0.15013404825737264, 0.030639601685178094, 0.007276905400229797, 0.011872845653006512, 0.01122830894862198, 0.5825110581830555, 0.006124532153793808, 0.2609731201088806, 0.41919020074855395, 0.08234093228989452, 0.00952705001701259, 0.008506294658046955, 0.01735284110241579, 0.054780537597822386, 1.0, 0.2354542361347397, 0.159237835998639, 0.050017012589316096, 0.013610071452875128, 0.010207553589656346, 0.05684260807260568, 0.3040363028421304, 0.06281347026510628, 0.08586099832815859, 0.046572725101504654, 0.22629567709577264, 0.01421065201815142, 0.058872701218055885, 0.03773584905660377, 0.04716981132075472, 0.08263673274420827, 1.0, 0.027943635060902795, 0.07176976355385718, 0.015046572725101504, 0.044064962980654404, 0.07793923381770146, 0.476221928665786, 0.018494055482166448, 0.09247027741083223, 0.5250990752972259, 0.10171730515191546, 0.011889035667107, 0.007926023778071334, 0.0891677675033025, 0.25891677675033026, 0.309114927344782, 0.154557463672391, 1.0, 0.05151915455746367, 0.00726552179656539, 0.01915455746367239, 0.21940747101760413, 0.296264491197939, 0.19321597252039502, 0.41734650064405326, 0.13052812365822242, 0.1262344353799914, 0.07213396307428081, 0.0339201373980249, 0.16487762988407043, 0.034349506225848, 0.0631172176899957, 0.25805066552168315, 0.03349076857020181, 1.0, 0.0197509660798626, 0.15113782739373122, 0.0024281667341157424, 0.04896802913800081, 0.0024281667341157424, 0.004451639012545528, 0.004856333468231485, 0.005261027923917442, 0.03318494536624848, 0.040064751112909754, 0.004451639012545528, 0.007689194658033185, 0.016187778227438283, 0.05099150141643059, 0.004451639012545528, 0.018615944961554026, 1.0, 0.006070416835289356, 0.25705939629990265, 0.12950340798442064, 0.45764362220058424, 0.19279454722492698, 0.024342745861733205, 0.06815968841285297, 0.024342745861733205, 0.11002921129503408, 0.1518987341772152, 0.03018500486854917, 0.029211295034079845, 0.3592989289191821, 0.028237585199610515, 0.3427458617332035, 0.014605647517039922, 1.0), nrow=16, ncol=16),
colorscale = list(c(0, "rgb(0,0,255)"),list(0.1, "rgb(51,153,255)"),list(0.2, "rgb(102,204,255)"),list(0.3, "rgb(153,204,255)"),list(0.4, "rgb(204,204,255)"),list(0.5, "rgb(255,255,255)"),list(0.6, "rgb(255,204,255)"),list(0.7, "rgb(255,153,255)"),list(0.8, "rgb(255,102,204)"),list(0.9, "rgb(255,102,102)"),list(1, "rgb(255,0,0)")),
name = "trace 0",
type = "heatmap",
uid = "0f0d45",
zmax = 1,
zmin = 0.0014360938247965534
)
data <- list(trace1)
layout <- list(
autosize = FALSE,
bargap = 0.2,
bargroupgap = 0,
barmode = "group",
boxgap = 0.3,
boxgroupgap = 0.3,
boxmode = "overlay",
dragmode = "zoom",
font = list(
color = "#444",
family = "\"Open sans\", verdana, arial, sans-serif",
size = 12
),
height = 440,
hidesources = FALSE,
hovermode = "x",
legend = list(
bgcolor = "#fff",
bordercolor = "#444",
borderwidth = 0,
font = list(
color = "",
family = "",
size = 0
),
traceorder = "normal"
),
margin = list(
r = 200,
t = 60,
autoexpand = TRUE,
b = 60,
l = 70,
pad = 2
),
paper_bgcolor = "#fff",
plot_bgcolor = "#fff",
separators = ".,",
title = "Correlation Matrix",
titlefont = list(
color = "",
family = "",
size = 0
),
width = 600
)
p <- plot_ly()
p <- add_trace(p, x=trace1$x, y=trace1$y, z=trace1$z, colorscale=trace1$colorscale, name=trace1$name, type=trace1$type, uid=trace1$uid, zmax=trace1$zmax, zmin=trace1$zmin)
p <- layout(p, autosize=layout$autosize, bargap=layout$bargap, bargroupgap=layout$bargroupgap, barmode=layout$barmode, boxgap=layout$boxgap, boxgroupgap=layout$boxgroupgap, boxmode=layout$boxmode, dragmode=layout$dragmode, font=layout$font, height=layout$height, hidesources=layout$hidesources, hovermode=layout$hovermode, legend=layout$legend, margin=layout$margin, paper_bgcolor=layout$paper_bgcolor, plot_bgcolor=layout$plot_bgcolor, separators=layout$separators, title=layout$title, titlefont=layout$titlefont, width=layout$width)
p
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project/Script.R')
library(shinydashboard)
install.packages("shinydashboard")
library(shinydashboard)
# Define UI
ui <- dashboardPage(
# App title
headerPanel("Survival Rate based on different categories"),
# Setting input options
sidebarLayout(
sidebarPanel(
selectInput(
inputId = "category", "Please select the category",
choices = c("Pclass", "Gender", "Age"
),
selected = "Pclass")
),
# Show the caption and plot of the requested variable
mainPanel(
h3(textOutput("caption")),
highchartOutput("hcontainer")
)
)
)
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project/Script.R')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project/Script.R')
runApp('C:/Users/53050/Desktop/FIT5147/tutorial1')
runApp('C:/Users/53050/Desktop/FIT5147/tutorial1')
runApp('C:/Users/53050/Desktop/FIT5147/tutorial1')
runApp('C:/Users/53050/Desktop/FIT5147/tutorial1')
runApp('C:/Users/53050/Desktop/FIT5147/tutorial1')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project/Script.R')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project/Script.R')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project/Script.R')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
output$hcontainer2 <- output$hcontainer
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
library(flexdashboard)
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
library("flexdashboard", lib.loc="~/R/win-library/3.5")
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
p1<-valueBox(2222, icon = "fa-ship", color="rgb(100,100,100)")
p1<-valueBox(2222, icon = "fa-ship", color="red")
p1<-valueBox(2222, icon = "fa-ship", color="red")
install.packages("shiny")
library(flexdashboard)
library(ggplot2)
library(tidyverse) #data Manipulation
library(highcharter)
#library(VIM)#for checking missing values
library(dplyr)
library(shiny)
library(datasets)
library(plotly)
library(corrplot)
p1<-valueBox(2222, icon = "fa-ship", color="red")
p1
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
print(p1)
p1<-valueBox(2222, icon = "fa-ship", color="red")
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
runApp('C:/Users/53050/Desktop/FIT5147/Visual Project')
shiny::runApp()
runApp()
runApp()
shiny::runApp()
runApp()
shiny::runApp()
